name: CI Terraform ReUsable Workflow

on:
  workflow_call:
    inputs:
      app_name:
        description: "name of the app name" 
        required: true
        type: string
      container_port:
        description: "Container port" 
        required: true
        type: number
    secrets:
      PAT_TOKEN:
        required: true

jobs:
  
  Build:
    runs-on: ubuntu-latest
    
    steps:
      
      - name: Checkout Service Code
        uses: actions/checkout@v4.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN}}
      
      - name: Run Code Analysis/Test/other CI stage 
        run: |
          echo "Running code analysis... unit Test ....."
          echo "Code analysis Test complete!"

      - name: Docker Build
        id: docker-build
        run: |
          echo "Building Docker image..."
          COMMIT_ID=$(git rev-parse HEAD)
          docker build -t ${{ inputs.app_name }}:${COMMIT_ID} .
          echo "image_name=${{ inputs.app_name }}:${COMMIT_ID}" >> $GITHUB_OUTPUT


    
      - name: Run Docker vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ steps.docker-build.outputs.image_name }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Test Container
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          docker run -d --name my-service -p 5000:${{ inputs.container_port }} ${{ inputs.app_name }}:${COMMIT_ID}
          sleep 5
          # Check the status code
          STATUS_CODE=$(curl -o /dev/null -s -w "%{http_code}\n" http://localhost:5000)
          if [ "$STATUS_CODE" -eq 200 ]; then
              echo "Service is running and returned status code 200"
          else
              echo "Service returned status code $STATUS_CODE"
              exit 1
          fi
      
      - name: Terraform Validate
        working-directory: terraform
        id: terraform-validate
        run: |
          terraform init -backend=false
          terraform validate
      
      - name: Run IAC vulnerability scanner 
        if: ${{ steps.terraform-validate.outcome == 'success' }}
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'config'
          hide-progress: true
          scan-ref: '.'
          limit-severities-for-sarif: true
          exit-code: 0
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
      
      - name : Push Image To Common Container repo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          echo "docker retaging tag image"
          echo "docker pushing image to artifactory.tanish-guleria.com/${{ inputs.app_name }}:${COMMIT_ID}" 
      
      - name: Generate Artifact File
        run: |
          echo "This is a generated file." > image_artifact.txt
          echo "Commit ID: $(git rev-parse HEAD)" >> image_artifact.txt
          echo "File created: image_artifact.txt"

      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-file
          path: image_artifact.txt
      
      - name: Post CI
        run: | 
          echo "CI Completed"


      