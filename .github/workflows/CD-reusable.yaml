name: CD Terraform ReUsable Workflow
on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy the team-onboarding to'
        required: true
        type: string
      branch:
        description: 'Branch to deploy the Service Terraform code from'
        required: true
        type: string
      target_deploy:
        description: 'Target deploy to Environment for Hotfix'
        required: true
        type: string
    secrets:
      PAT_TOKEN:
        required: true
      inf_AWS_ACCESS_KEY_ID:
        required: true
      inf_AWS_SECRET_ACCESS_KEY:
        required: false
      dev_AWS_ACCESS_KEY_ID:
        required: true
      dev_AWS_SECRET_ACCESS_KEY:
        required: true
      qa_AWS_ACCESS_KEY_ID:
        required: false
      qa_AWS_SECRET_ACCESS_KEY:
        required: true
      prod_AWS_ACCESS_KEY_ID:
        required: true
      prod_AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Starting CD
        run: |
          echo "Starting CD" 

  deploy-inf:
    needs: setup
    if: inputs.environment == 'inf' || inputs.environment == 'dev' || inputs.environment == 'qa' || inputs.environment == 'prod' &&  inputs.target_deploy == 'no'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout reusable Workflows/Scripts
        uses: actions/checkout@v4
        with:
          repository: TanishGuleria/new-relic-reusable-flow
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Run Terrafrom CD
        uses: ./.github/actions/terraform-deploy
        with:
          environment: ${{ inputs.ENVIRONMENT }}
          branch: ${{inputs.branch }}
          aws-access-key-id: ${{ secrets.inf_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.inf_AWS_SECRET_ACCESS_KEY }}
      

  deploy-dev:
    if: inputs.environment == 'dev' || inputs.environment == 'qa' || inputs.environment == 'prod' &&  inputs.target_deploy == 'no'
    runs-on: ubuntu-latest
    needs: deploy-inf
    steps:
      
      - name: Checkout reusable Workflows/Scripts
        uses: actions/checkout@v4
        with:
          repository: TanishGuleria/new-relic-reusable-flow
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Run Terrafrom CD
        uses: ./.github/actions/terraform-deploy
        with:
          environment: ${{ inputs.ENVIRONMENT }}
          branch: ${{inputs.branch }}
          aws-access-key-id: ${{ secrets.dev_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.dev_AWS_SECRET_ACCESS_KEY }}

  deploy-qa:
    if: inputs.environment == 'qa' || inputs.environment == 'prod' &&  inputs.target_deploy == 'no'
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      
      - name: Checkout reusable Workflows/Scripts
        uses: actions/checkout@v4
        with:
          repository: TanishGuleria/new-relic-reusable-flow
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Run Terrafrom CD
        uses: ./.github/actions/terraform-deploy
        with:
          environment: ${{ inputs.ENVIRONMENT }}
          branch: ${{inputs.branch }}
          aws-access-key-id: ${{ secrets.qa_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.qa_AWS_SECRET_ACCESS_KEY }}

  deploy-prod:
    environment: prod
    if: inputs.environment == 'prod' &&  inputs.target_deploy == 'no'
    runs-on: ubuntu-latest
    needs: deploy-qa
    steps:
      
      - name: Checkout reusable Workflows/Scripts
        uses: actions/checkout@v4
        with:
          repository: TanishGuleria/new-relic-reusable-flow
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Run Terrafrom CD
        uses: ./.github/actions/terraform-deploy
        with:
          environment: ${{ inputs.ENVIRONMENT }}
          branch: ${{inputs.branch }}
          aws-access-key-id: ${{ secrets.prod_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.prod_AWS_SECRET_ACCESS_KEY }}
  
  target_deploy:
    needs: setup
    environment: ${{ inputs.environment }}
    if: inputs.target_deploy == 'yes' 
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout reusable Workflows/Scripts
        uses: actions/checkout@v4
        with:
          repository: TanishGuleria/new-relic-reusable-flow
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Run Terraform CD
        uses: ./.github/actions/terraform-deploy
        with:
          environment: ${{ inputs.ENVIRONMENT }}
          branch: ${{ inputs.branch }}
          aws-access-key-id: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID', inputs.ENVIRONMENT)] }}
          aws-secret-access-key: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY', inputs.ENVIRONMENT)] }}



