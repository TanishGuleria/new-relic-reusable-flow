name: CD Terraform ReUsable Workflow
on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy the team-onboarding to'
        required: true
        type: string
      branch:
        description: 'Branch to deploy the Service Terraform code from'
        required: true
        type: string
      target_deploy:
        description: 'Target deploy to Environment for Hotfix'
        required: true
        type: boolean
    secrets:
      PAT_TOKEN:
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Starting CD
        run: |
          echo "Starting CD" 

  deploy-inf:
    needs: setup
    if: inputs.environment == 'inf' || inputs.environment == 'dev' || inputs.environment == 'qa' || inputs.environment == 'prod' &&  inputs.target_deploy == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to inf
        run: |
          echo "Deploying to inf environment"
          # Add your deployment script/commands here
  deploy-dev:
    if: inputs.environment == 'dev' || inputs.environment == 'qa' || inputs.environment == 'prod' &&  inputs.target_deploy == false
    runs-on: ubuntu-latest
    needs: deploy-inf
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to dev
        run: |
          echo "Deploying to dev environment"
          # Add your deployment script/commands here

  deploy-qa:
    if: inputs.environment == 'qa' || inputs.environment == 'prod' &&  inputs.target_deploy == false
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to qa
        run: |
          echo "Deploying to qa environment"
          # Add your deployment script/commands here

  deploy-prod:
    environment: prod
    if: inputs.environment == 'prod' &&  inputs.target_deploy == false
    runs-on: ubuntu-latest
    needs: deploy-qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to prod
        run: |
          echo "Deploying to prod environment"
          # Add your deployment script/commands here
  
  target_deploy:
    needs: setup
    environment: ${{ inputs.environment }}
    if: inputs.target_deploy == true 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to prod
        run: |
          echo "Deploying to targeted ${{ inputs.environment }} environment"
          # Add your deployment script/commands here


